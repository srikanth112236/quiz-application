{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SRIKANTH\\\\OneDrive\\\\Desktop\\\\7intelligence\\\\final\\\\src\\\\components\\\\CountDownTimer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\n\nconst CountDownTimer = _ref => {\n  _s();\n\n  let {\n    hoursMinSecs,\n    stopper\n  } = _ref;\n  const {\n    hours = 0,\n    minutes = 0,\n    seconds = 60\n  } = hoursMinSecs;\n  const [[hrs, mins, secs], setTime] = useState([hours, minutes, seconds]);\n  const [isActive, setIsActive] = useState(true);\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  const tick = () => {\n    if (hrs === 0 && mins === 0 && secs === 0) alert(\"TimeUP\");else if (mins === 0 && secs === 0) {\n      setTime([hrs - 1, 59, 59]);\n    } else if (secs === 0) {\n      setTime([hrs, mins - 1, 59]);\n    } else {\n      setTime([hrs, mins, secs - 1]);\n    }\n  };\n\n  const reset = () => setTime([parseInt(hours), parseInt(minutes), parseInt(seconds)]);\n\n  React.useEffect(() => {\n    let timerId = null;\n\n    if (isActive) {\n      timerId = setInterval(() => tick(), 1000);\n    }\n\n    if (stopper == true) {\n      clearInterval(timerId);\n    } else if (stopper == \"reset\") {\n      setIsActive(true);\n      reset();\n    }\n\n    return () => clearInterval(timerId);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, `${hrs.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`));\n};\n\n_s(CountDownTimer, \"+d0R6cND7DjXU3BzAFH3VkVl7KA=\");\n\n_c = CountDownTimer;\nexport default CountDownTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDownTimer\");","map":{"version":3,"names":["React","useState","CountDownTimer","hoursMinSecs","stopper","hours","minutes","seconds","hrs","mins","secs","setTime","isActive","setIsActive","toggle","tick","alert","reset","parseInt","useEffect","timerId","setInterval","clearInterval","toString","padStart"],"sources":["C:/Users/SRIKANTH/OneDrive/Desktop/7intelligence/final/src/components/CountDownTimer.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nconst CountDownTimer = ({hoursMinSecs,stopper}) => {\r\n    \r\n    const { hours = 0, minutes = 0, seconds = 60 } = hoursMinSecs;\r\n    const [[hrs, mins, secs], setTime] = useState([hours, minutes, seconds]);\r\n    const [isActive, setIsActive] = useState(true);\r\n    function toggle() {\r\n        setIsActive(!isActive);\r\n      }\r\n    const tick = () => {\r\n   \r\n        if (hrs === 0 && mins === 0 && secs === 0) \r\n            alert(\"TimeUP\");\r\n        else if (mins === 0 && secs === 0) {\r\n            setTime([hrs - 1, 59, 59]);\r\n        } else if (secs === 0) {\r\n            setTime([hrs, mins - 1, 59]);\r\n        } else {\r\n            setTime([hrs, mins, secs - 1]);\r\n        }\r\n    };\r\n\r\n\r\n    const reset = () => setTime([parseInt(hours), parseInt(minutes), parseInt(seconds)]);\r\n\r\n    \r\n    React.useEffect(() => {\r\n        let timerId=null;\r\n        if(isActive){\r\n             timerId = setInterval(() => tick(), 1000);\r\n        }\r\n        \r\n        if(stopper==true){\r\n            clearInterval(timerId);\r\n         }\r\n         else if(stopper==\"reset\"){\r\n            setIsActive(true);\r\n            reset();\r\n         }\r\n         \r\n        return () => clearInterval(timerId);\r\n    });\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <p>{`${hrs.toString().padStart(2, '0')}:${mins\r\n            .toString()\r\n            .padStart(2, '0')}:${secs.toString().padStart(2, '0')}`}</p> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CountDownTimer;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,MAAMC,cAAc,GAAG,QAA4B;EAAA;;EAAA,IAA3B;IAACC,YAAD;IAAcC;EAAd,CAA2B;EAE/C,MAAM;IAAEC,KAAK,GAAG,CAAV;IAAaC,OAAO,GAAG,CAAvB;IAA0BC,OAAO,GAAG;EAApC,IAA2CJ,YAAjD;EACA,MAAM,CAAC,CAACK,GAAD,EAAMC,IAAN,EAAYC,IAAZ,CAAD,EAAoBC,OAApB,IAA+BV,QAAQ,CAAC,CAACI,KAAD,EAAQC,OAAR,EAAiBC,OAAjB,CAAD,CAA7C;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAxC;;EACA,SAASa,MAAT,GAAkB;IACdD,WAAW,CAAC,CAACD,QAAF,CAAX;EACD;;EACH,MAAMG,IAAI,GAAG,MAAM;IAEf,IAAIP,GAAG,KAAK,CAAR,IAAaC,IAAI,KAAK,CAAtB,IAA2BC,IAAI,KAAK,CAAxC,EACIM,KAAK,CAAC,QAAD,CAAL,CADJ,KAEK,IAAIP,IAAI,KAAK,CAAT,IAAcC,IAAI,KAAK,CAA3B,EAA8B;MAC/BC,OAAO,CAAC,CAACH,GAAG,GAAG,CAAP,EAAU,EAAV,EAAc,EAAd,CAAD,CAAP;IACH,CAFI,MAEE,IAAIE,IAAI,KAAK,CAAb,EAAgB;MACnBC,OAAO,CAAC,CAACH,GAAD,EAAMC,IAAI,GAAG,CAAb,EAAgB,EAAhB,CAAD,CAAP;IACH,CAFM,MAEA;MACHE,OAAO,CAAC,CAACH,GAAD,EAAMC,IAAN,EAAYC,IAAI,GAAG,CAAnB,CAAD,CAAP;IACH;EACJ,CAXD;;EAcA,MAAMO,KAAK,GAAG,MAAMN,OAAO,CAAC,CAACO,QAAQ,CAACb,KAAD,CAAT,EAAkBa,QAAQ,CAACZ,OAAD,CAA1B,EAAqCY,QAAQ,CAACX,OAAD,CAA7C,CAAD,CAA3B;;EAGAP,KAAK,CAACmB,SAAN,CAAgB,MAAM;IAClB,IAAIC,OAAO,GAAC,IAAZ;;IACA,IAAGR,QAAH,EAAY;MACPQ,OAAO,GAAGC,WAAW,CAAC,MAAMN,IAAI,EAAX,EAAe,IAAf,CAArB;IACJ;;IAED,IAAGX,OAAO,IAAE,IAAZ,EAAiB;MACbkB,aAAa,CAACF,OAAD,CAAb;IACF,CAFF,MAGM,IAAGhB,OAAO,IAAE,OAAZ,EAAoB;MACtBS,WAAW,CAAC,IAAD,CAAX;MACAI,KAAK;IACP;;IAEF,OAAO,MAAMK,aAAa,CAACF,OAAD,CAA1B;EACH,CAfD;EAkBA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAK,GAAEZ,GAAG,CAACe,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAAgC,IAAGf,IAAI,CAC7Cc,QADyC,GAEzCC,QAFyC,CAEhC,CAFgC,EAE7B,GAF6B,CAExB,IAAGd,IAAI,CAACa,QAAL,GAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,CAAiC,EAFtD,CADJ,CADJ;AAOH,CAlDD;;GAAMtB,c;;KAAAA,c;AAoDN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}